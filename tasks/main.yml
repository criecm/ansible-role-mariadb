---
- name: vars
  include_vars: '{{ ansible_distribution }}.yml'
  failed_when: False

- name: get status
  include_tasks: 'getstatus.yml'

- name: install
  include_tasks: 'install-{{ ansible_os_family }}.yml'
  when: do_mariadb_install

- name: show detected version
  debug:
    msg: |
      version={{ mariadb_version }}
      socket={{ mariadb_socket }}
      ini={{ mariadb_server_ini }}
  when: do_mariadb_install

- name: chown dirs
  file:
    dest: '{{ item }}'
    state: directory
    mode: '0750'
    owner: '{{ mariadb_owner }}'
    group: '{{ mariadb_group }}'
  loop:
    - '{{ mariadb_basedir }}'
    - '{{ mariadb_datadir }}'
    - '{{ mariadb_logdir }}'
    - '{{ mariadb_innodb_logdir }}'
  when: do_mariadb_install

- name: mariadb port {{ mariadb_port }}
  ini_file:
    path: '{{ mariadb_etcdir }}/my.cnf'
    section: client-server
    option: port
    value: '{{ mariadb_port }}'
    mode: '644'
  when: not ( mariadb_current_config["port"] | default(False) and 
    mariadb_current_config["port"] == mariadb_port ) and do_mariadb_install

- name: start mariadb
  service:
    name: '{{ mariadb_service }}'
    state: started
  when: not ( init_galera_cluster_now | default(False) and galera.nodes[0].name == ansible_hostname ) and do_mariadb_install

- name: root pass
  mysql_user:
    login_unix_socket: '{{ mariadb_socket }}'
    name: root
    password: '{{ mariadb_root_password }}'
    login_user: root
    host: localhost
    append_privs: yes
    priv: '*.*:ALL,GRANT'
    check_implicit_admin: yes
    state: present
  when: mariadb_root_password | length > 0 and
    not ( galera.cluster_name | default(False) and galera.nodes[0].name != ansible_hostname )

- name: /root/.my.cnf
  copy:
    dest: /root/.my.cnf
    mode: '0600'
    backup: yes
    content: |
      [mysql]
      user=root
      {% if mariadb_root_password | length > 0 %}password={{ mariadb_root_password }}{% endif %}

      [mysqladmin]
      user=root
      {% if mariadb_root_password | length > 0 %}password={{ mariadb_root_password }}{% endif %}
  when: do_mariadb_install

- name: galera cluster {{ galera.cluster_name | default("no") }}
  include_tasks: 'galera-{{ ansible_os_family }}.yml'
  when: galera.cluster_name | default(False) and do_mariadb_install

- name: first install
  block:
    - name: no test db
      mysql_db:
        login_unix_socket: '{{ mariadb_socket }}'
        name: test
        state: absent
    - name: no empty mysql user for localhost
      mysql_user:
        login_unix_socket: '{{ mariadb_socket }}'
        name: ''
        host: localhost
        state: absent
    - name: no empty mysql user for any host
      mysql_user:
        login_unix_socket: '{{ mariadb_socket }}'
        name: ''
        host_all: yes
        state: absent
    - name: no root on 127.0.0.1
      mysql_user:
        login_unix_socket: '{{ mariadb_socket }}'
        name: 'root'
        host: '127.0.0.1'
        state: absent
    - name: no root on ::1
      mysql_user:
        login_unix_socket: '{{ mariadb_socket }}'
        name: 'root'
        host: '::1'
        state: absent
    - name: load timezone infos
      shell: 'set -o pipefail && mariadb-tzinfo-to-sql /usr/share/zoneinfo/ | mysql mysql' # noqa no-changed-when
  when: install_mariadb.changed | default(False) and not
    ( galera.cluster_name | default(False) and ansible_hostname != galera.nodes[0].name )

- name: 'default admin {{ mariadb_admin_user }}'
  mysql_user:
    name: '{{ mariadb_admin_user }}'
    password: '{{ mariadb_admin_password }}'
    update_password: on_create
    login_unix_socket: '{{ mariadb_socket | default(omit) }}'
    host: '%'
    priv: '*.*:ALL,GRANT'
    state: present
  when: mariadb_admin_user | length > 0 and mariadb_admin_password | length > 0 and not
    ( galera.cluster_name | default(False) and ansible_hostname != galera.nodes[0].name )
    and do_mariadb_install

- name: galera checks users
  block:
    - name: clustercheck user
      mysql_user:
        login_unix_socket: '{{ mariadb_socket }}'
        host: 'localhost'
        name: '{{ galera.clustercheck.user }}'
        password: '{{ galera.clustercheck.pass }}'
        priv: '*.*:PROCESS'
        state: present
      when: galera.clustercheck | default(False)
    - name: galeracheck user
      mysql_user:
        host: '%'
        login_unix_socket: '{{ mariadb_socket }}'
        name: '{{ galera.galeracheck.user }}'
        password: '{{ galera.galeracheck.pass }}'
        priv: '*.*:PROCESS'
        state: present
      when: galera.galeracheck | default(False)
  when: galera.cluster_name | default(False) and ansible_hostname == galera.nodes[0].name
    and do_mariadb_install

- name: local facts
  copy:
    src: my_dbs.fact
    dest: '{{ etcdir }}/ansible/facts.d/my_dbs.fact'
    mode: '0550'

- name: new users
  mysql_user:
    name: '{{ item.name }}'
    priv: '{{ item.priv | default("*.*:USAGE") }}'
    host: '{{ item.host | default("localhost") }}'
    password: '{{ item.password | default(item.name | hash("sha256")) }}'
    login_unix_socket: '{{ mariadb_socket }}'
    state: present
  loop: '{{ mariadb_users | union(mariadb_maintenance_users) }}'
  when: not ( galera.cluster_name | default(False) and ansible_hostname != galera.nodes[0].name )
  run_once: '{{ galera_is_running }}'

- name: new dbs
  include_tasks: db.yml
  loop_control:
    loop_var: mariadb
  loop: '{{ mariadb_dbs }}'
  when: mariadb_dbs | count > 0
  run_once: '{{ galera_is_running }}'

- name: monitor tmp var
  set_fact:
    tmpmon:
      - proto: mysql
        name: '{{ ansible_fqdn }}'
        port: '{{ mariadb_port }}'
        type: mysql

- name: register to_monitor
  set_fact:
    to_monitor: '{{ to_monitor | default([]) | union(tmpmon) }}'
    cacheable: yes

- name: monitor vars
  debug:
    var: to_monitor
