# create/maintain zfs layout
- name: get zfs facts
  zfs_facts:
    name: '{{ mariadb_zfs_base }}'
    recurse: yes
  register: zfs_base_fact
  ignore_errors: True
  loop:
    - '{{ mariadb_zfs_base }}'

- name: get old innodb dir
  shell: 'eval $(grep ^innodb_log_group_home_dir {{ mariadb_server_ini }} 2>/dev/null | sed "s/ //g" ); echo ${innodb_log_group_home_dir:-"{{ mariadb_datadir }}"}'
  register: oldinnodbdir_fact
  changed_when: False
  failed_when: False

- name: set innodblogdir fact
  set_fact:
    mariadb_innodb_logdir_wanted: '{{ mariadb_basedir + "/innodb-logs" }}'
    mariadb_innodb_logdir: '{{ oldinnodbdir_fact.stdout }}'

- name: stat basedir
  stat:
    path: '{{ mariadb_basedir }}'
  register: stat_basedir

- name: set actual facts
  set_fact:
    innodb_log_has_zfs: '{% if ansible_zfs_datasets | default(False) and
      ansible_zfs_datasets | selectattr("mountpoint","equalto",oldinnodbdir_fact.stdout) |
      list | count == 1 %}True{% else %}False{% endif %}'
    datadir_has_zfs: '{% if ansible_zfs_datasets | default(False) and
      ansible_zfs_datasets | selectattr("mountpoint","equalto",mariadb_datadir) |
      list | count == 1 %}True{% else %}False{% endif %}'
    basedir_has_zfs: '{% if ansible_zfs_datasets | default(False) and
      ansible_zfs_datasets | selectattr("mountpoint","equalto",mariadb_basedir) |
      list | count == 1 %}True{% else %}False{% endif %}'

- name: take decisions
  set_fact:
    need_move: '{% if curdatadb.stat.exists and ( not basedir_has_zfs or not
      ( innodb_log_has_zfs and datadir_has_zfs ) ) %}True{% else %}False{% endif %}'
    need_move_data: '{% if curdatadb.stat.exists and ( not datadir_has_zfs or
      ( mariadb_datadir_wanted != mariadb_datadir ) ) %}True{% else %}False{% endif %}'
    need_move_logs: '{% if curdatadb.stat.exists and ( not innodb_log_has_zfs or
      ( mariadb_innodb_logdir_wanted != mariadb_innodb_logdir ) )
      %}True{% else %}False{% endif %}'
    need_new: '{{ not curdatadb.stat.exists }}'

- name: show decisions
  debug:
    msg: '{{ item }}'
  loop:
    - 'need_new: {{ need_new }}'
    - 'need_move: {{ need_move }}'
    - 'need_move_logs: {{ need_move_logs }}'
    - 'need_move_data: {{ need_move_data }}'
    - 'basedir_has_zfs: {{ basedir_has_zfs }}'
    - 'datadir_has_zfs: {{ datadir_has_zfs }}'
    - 'innodb_log_has_zfs: {{ innodb_log_has_zfs }}'

- name: stop mysql
  service:
    name: '{{ mariadb_service }}'
    state: stopped
  when: ( need_move or need_move_logs or need_move_data ) and mariadb_relayout_zfs

- name: enable system zfs
  service:
    name: zfs
    enabled: yes
    state: started
  when: ( need_move or need_move_logs or need_move_data ) and mariadb_relayout_zfs

- name: move old basedir if any and no zfs
  block:
    - name: move old dir if any and no zfs
      command: 'mv {{ mariadb_basedir }} {{ mariadb_basedir }}.orig' # noqa no-changed-when
      register: movedbasedir
    - name: olddbdirs facts
      set_fact:
        oldbasedir: '{{ mariadb_basedir }}.orig'
        olddatadir: '{{ mariadb_datadir | regex_replace(mariadb_basedir | regex_escape(),mariadb_basedir+".orig") }}'
        oldinnodbdir: '{{ oldinnodbdir_fact.stdout | default(mariadb_datadir) | regex_replace(mariadb_basedir | regex_escape(),mariadb_basedir+".orig") }}'
        need_move_data: True
        need_move_logs: True
  when: not basedir_has_zfs and need_move and mariadb_relayout_zfs and not ( innodb_log_has_zfs or datadir_has_zfs )

- name: 'zfs {{ mariadb_zfs_base }}'
  zfs:
    name: '{{ mariadb_zfs_base }}'
    state: present
    extra_zfs_properties:
      mountpoint: '{{ mariadb_basedir }}'
      recordsize: 128K
      compression: 'lz4'
      atime: 'off'
  when: not ( need_move and not mariadb_relayout_zfs )
  register: zfs_base

- name: zfs innodb-logs
  zfs:
    name: '{{ mariadb_zfs_base }}/innodb-logs'
    state: present
    extra_zfs_properties:
      mountpoint: '{{ mariadb_innodb_logdir_wanted }}'
      recordsize: 128K
      sync: 'disabled'
  register: zfs_innodb_logdir
  when: not ( need_move_logs and not mariadb_relayout_zfs )

- name: move logs
  block:
    - name: move old innodb_logs
      shell: 'mv {{ oldinnodbdir | default(mariadb_innodb_logdir) }}/ib_logfile* {{ mariadb_innodb_logdir_wanted }}/'
      failed_when: False
      register: move_logs
      when: zfs_innodb_logdir.changed | default(False)
          or oldinnodbdir | default(mariadb_innodb_logdir) != mariadb_innodb_logdir_wanted
    - name: remove old logdir
      file:
        path: '{{ mariadb_innodb_logdir) }}'
        state: absent
      when: not oldinnodbdir | default(False)
        and mariadb_innodb_logdir != mariadb_datadir
    - name: change innodb_log_has_zfs fact
      set_fact:
        mariadb_innodb_oldlogdir: '{{ mariadb_innodb_logdir }}'
        mariadb_innodb_logdir: '{{ mariadb_innodb_logdir_wanted }}'
        innodb_log_has_zfs: True
  when: oldinnodbdir | default(mariadb_innodb_logdir)
    and need_move_logs and mariadb_relayout_zfs

- name: ini config innodb_logs
  ini_file:
    dest: '{{ mariadb_server_ini }}'
    section: '{{ mariadb_server_ini_section }}'
    option: 'innodb_log_group_home_dir'
    value: '{{ mariadb_innodb_logdir }}'
    mode: '0640'
    group: '{{ mariadb_group }}'
  notify: restart mariadb
  when: zfs_innodb_logdir.changed | default(False)
    or movedbasedir.changed | default(False)
    or move_logs.changed | default(False)

- name: zfs datadir
  zfs:
    name: '{{ mariadb_zfs_base }}/data'
    state: present
    extra_zfs_properties:
      mountpoint: '{{ mariadb_datadir_wanted }}'
      recordsize: '16K'
      sync: 'disabled'
  register: zfs_datadir
  when: not ( need_move_data and not mariadb_relayout_zfs )

- name: move data
  block:
    - name: move old data
      shell: 'mv {{ olddatadir | default(mariadb_datadir) }}/* {{ mariadb_datadir_wanted }}/'
      args:
        chdir: '{{ mariadb_basedir }}'
      failed_when: False
      register: datadir_mv_data
      when: ( zfs_datadir.changed | default(False) or movedbasedir.changed | default(False) )
          or olddatadir | default(mariadb_datadir) != mariadb_datadir_wanted
    - name: set new datadir fact
      set_fact:
        mariadb_olddatadir: '{{ mariadb_datadir }}'
        mariadb_datadir: '{{ mariadb_datadir_wanted }}'
        datadir_has_zfs: True
    - name: conf.d/server.cnf datadir
      ini_file:
        path: '{{ mariadb_server_ini }}'
        section: '{{ mariadb_server_ini_section }}'
        option: 'datadir'
        value: '{{ mariadb_datadir }}'
        mode: '0640'
        group: '{{ mariadb_group }}'
    - name: change datadir in rc.conf
      lineinfile:
        dest: /etc/rc.conf
        line: 'mysql_dbdir="{{ mariadb_datadir }}"'
        regexp: '^mysql_dbdir=.*$'
  when: need_move_data and mariadb_relayout_zfs

- name: get innodb-logs recordsize
  shell: "set -o pipefail && zfs get -H -p -o value recordsize $(df {{ mariadb_innodb_logdir }} | tail -1 | awk '{print $1}')"
  register: zfs_get_log_recordsize
  check_mode: False
  changed_when: False

- name: fact zfs_log_recordsize
  set_fact:
    zfs_log_recordsize: '{{ zfs_get_log_recordsize.stdout | default(16384) }}'

- name: conf.d/server.cnf ZFS tuning
  ini_file:
    path: '{{ mariadb_server_ini }}'
    section: '{{ mariadb_server_ini_section }}'
    option: '{{ item.key }}'
    value: '{{ item.value }}'
    mode: '0640'
    group: '{{ mariadb_group }}'
  loop: '{{ my_cnf_mysqld_zfs | dict2items }}'
  when: innodb_log_has_zfs or datadir_has_zfs or need_new
